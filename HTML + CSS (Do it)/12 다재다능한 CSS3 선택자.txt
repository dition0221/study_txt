12-1 연결 선택자 (= 컴비네이션 선택자, 조합 선택자)

연결 선택자
= 선택자와 선택자를 연결해 적용 대상을 한정하는 선택자

하위 선택자
= 부모 요소에 포함된 모든 하위 요소에 스타일이 적용
= 기본형 : 상위요소 하위요소 { ... }

자식 선택자
= 자식 요소에만 스타일을 적용하는 선택자
= 기본형 : 상위요소 > 하위요소 { ... }

인접 형제 선택자
= 같은 부모를 가진 형제 요소 중 첫 번째 동생 요소에만 스타일 적용
= 기본형 : 요소1 + 요소2 { ... }

형제 선택자
= 형제 요소들에 스타일 적용 (모든 형제 요소에 다 적용)
= 기본형 : 요소1 ~ 요소2 { ... }



12-2 속성 선택자

[속성] 선택자
= 지정한 속성을 가진 요소를 찾아 스타일 적용
= 기본형 : [속성]

[속성 = 값] 선택자
= 주어진 속성과 속성 값이 일치하는 요소를 찾아 스타일 적용
= 기본형 : [속성 = 값]

[속성 ~= 값] 선택자
= 여러 속성 값 중에 해당 값이 포함되어 있는 요소를 찾아 스타일 적용
= 기본형 : [속성 ~= 값]
	- 선택된 값은 일부만 일치하는 게 아니라, 한 단어로 일치해야 함

[속성 |= 값] 선택자
= 특정 값이 포함되어 있는 요소를 찾아 스타일 적용
	- 이때 값은 한 단어로 일치해야 함
	- 하이픈(-)으로 연결해 한 단어 값을 이루는 요소에도 적용
= 기본형 : [속성 |= 값]

[속성 ^= 값] 선택자
= 특정 값으로 시작하는 속성을 가진 요소를 찾아 스타일 적용
= 기본형 : [속성 ^= 값]

[속성 $= 값] 선택자
= 특정 값으로 끝나는 속성을 가진 요소를 찾아 스타일 적용
= 기본형 : [속성 $= 값]

[속성 *= 값] 선택자
= 값이 어느 위치에든 해당 값이 포함되어 있으면 스타일 적용
= 기본형 : [속성 *= 값]



12-3 가상 클래스와 가상 요소

가상 클래스 선택자
= 여러 태그 중에서 원하는 태그를 선택하기 위해 사용하는 선택자

사용자 동작에 반응하는 가상 클래스
= 사용자 동작(클릭, 커서를 올려놓는 등)에 스타일이 바뀌도록 만들 때, 가상 클래스 선택자를 사용
1.  :link 가상 클래스 선택자
	= 방문하지 않은 링크에 스타일 적용
	- 기본적으로 파란색 글자와 밑줄로 표시
2.  :visited 가상 클래스 선택자
	= 방문한 링크에 스타일 적용
	- 기본적으로 자주색으로 표시
3.  :hover 가상 클래스 선택자
	= 웹 요소에 마우스 커서를 올려놓을 때의 스타일 적용
4.  :active 가상 클래스 선택자
	= 웹 요소를 활성 했을 때(누르고 있을 때, 클릭)의 스타일 적용
5.  :focus 가상 클래스 선택자
	= 웹 요소에 초점이 맞추어졌을 때의 스타일 적용
	- [Tab]을 눌러서 링크 간에 이동하거나, 폼에서 입력 필드 간에 이동할 때 사용
- 1~4 네가지를 모두 정의한다면 :link 선택자부터 정의하고 :visited, :hover, :avtive 순서대로 정의
	- 순서가 바뀌면 스타일을 정의하더라도 제대로 적용되지 않음

UI 요소 상태에 따른 가상 클래스
1.  :enabled 와 :disabled 가상 클래스 선택자
	= 요소를 사용할 수 있을 때와 없을 때의 스타일 지정
2.  :checked 가상 클래스 선택자
	= 라디오 박스나 체크 박스에서 항목을 선택했을 때의 스타일 지정

구조 가상 클래스
= 웹 문서 구조를 기준으로 특정 위치에 있는 요소를 찾아 스타일을 지정할 때 사용하는 가상 클래스 선택자
1.  :root 가상 클래스 선택자
	= 문서 안에 루트(root) 요소(문서 전체)에 스타일을 적용
	- HTML 문서에서는 루트 요소가 HTML이므로 HTML 요소에 스타일이 적용
2.  :nth-child(n) 와 :nth-last-child(n) 가상 클래스 선택자
	= :nth-child(n) : 앞에서부터 n번째 자식 요소에 스타일 적용
	= :nth-last-child(n) : 뒤에서부터 n번째 자식 요소에 스타일 적용
	- 위치를 나타낼 때 an+b 처럼 수식 사용 가능 (n 값은 0부터)
	- even(짝수) 또는 odd(홀수) 사용 가능
	- 위치에 따라 스타일을 적용하는 선택자는 해당 요소들이 모두 한 부모 요소를 갖고 있어야만 함
3.  :nth-of-type(n) 와 :nth-last-of-type(n) 가상 클래스 선택자
	= :nth-of-type(n) : 앞에서부터 n번째 요소에 스타일 적용
	= :nth-last-of-type(n) : 뒤에서부터 n번째 요소에 스타일 적용	
	- type 유형 기준
4.  :first-child 와 :last-child 가상 클래스 선택자
	= :first-child : 첫번째 자식 요소에 스타일 적용
	= :last-child : 마지막 자식 요소에 스타일 적용
5.  :first-of-type(n) 와 :last-of-type(n) 가상 클래스 선택자
	= :first-of-type(n) : 형제 요소들 중 첫번째 요소에 스타일 적용
	= :last-of-type(n) : 형제 요소들 중 마지막 요소에 스타일 적용	
	- type 유형 기준
6.  :only-child 와 :only-of-type 가상 클래스 선택자
	= :only-child : 부모 요소 안에 자식 요소가 유일하게 하나일 때 스타일 적용
	= :only-of-type : 자신이 유일한 요소일 때 스타일 적용

그 외 가상 클래스
1.  :target 가상 클래스 선택자
	= 앵커(같은 문서 안에서 다른 위치로 이동)의 목적지가 되는 부분의 스타일을 지정
2.  :not 가상 클래스 선택자
	= 괄호 안에 있는 요소를 제외한 요소들에 스타일 지정

가상 요소
= 내용의 일부만 선택해 스타일을 적용할 때 사용
- 이름 앞에 콜론 두 개(::)를 붙여 표시
1.  ::first-line 와 ::first-letter 요소
	= ::first-line : 특정 요소의 첫 번째 줄에 스타일 적용
	= ::first-letter : 특정 요소의 첫 번째 글자에 스타일 적용
		- 첫 번째 글자는 반드시 첫 번째 줄에 있어야 함
		- <br> 태그가 있어 첫 번째 글자가 첫 번째 줄에 없을 경우, 적용할 수 없음
2.  ::before 와 ::after 요소
	= ::before : 특정 요소의 앞에 지정한 내용을 추가
	= ::after : 특정 요소의 뒤에 지정한 내용을 추가
	- 요소의 앞뒤에 텍스트나 이미지 등을 추가할 수 있음
	- 단순히 보여주는 것이라서 js로 접근 불가