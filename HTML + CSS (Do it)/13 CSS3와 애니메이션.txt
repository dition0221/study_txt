13-1 변형(transform)

2차원 변형
= 웹 요소를 변형시킬 때 단순히 수평이나 수직으로 이동하고 회전하는 것
- 크기나 각도만 지정하면 됨
- 2차원 좌표 사용 (x축은 오른쪽이 양수, y축은 아래가 양수)

3차원 변형
= x축과 y축에 원근감을 주는 z축을 추가해 변형시키는 것
- z축은 앞뒤로 이동하는데, 보는 사람 쪽으로 다가올수록 값이 더 커짐

transform과 변형 함수
= 웹 요소를 변형하려면 transform: 다음에 변형 함수를 함께 입력해 사용
- 구식 모던 브라우저까지 고려한다면 브라우저 접두사를 붙여야 함

translate 함수
= 지정한 방향으로 이동할 거리를 지정하여, 해당 요소를 이동시킴
	= transform: translate(tx, ty);
		- ty 값이 주어지지 않으면, 0으로 간주함
	= transform: translate3d(tx, ty, tz);
	= transform: translateX(tx);
	= transform: translateY(ty);
	= transform: translateZ(tz);

scale 함수
= 지정한 크기만큼 요소를 확대/축소
	= transform: scale(sx, sy);
		- sy 값이 주어지지 않으면, sx값과 같다고 간주함
	= transform: scale3d(sx, sy, sz);
	= transform: scaleX(sx);
	= transform: scaleY(sy);
	= transform: scaleZ(sz);
- 괄호 안의 값이 1보다 크면 확대되고, 1보다 작으면 축소

rotate 함수
= 각도만큼 웹 요소를 시계 방향이나 시계 반대 방향으로 회전
	- 2차원 함수 기본형
	= transform: rotate(각도);
	- 3차원 함수 기본형
	= transform: rotate(rx, ry, 각도);
	= transform: rotate3d(rx, ry, rz, 각도);
	= transform: rotateX(각도);
	= transform: rotateY(각도);
	= transform: rotateZ(각도);
- 일반 각도(degree)나 라디안(radian) 값 사용
- 양수 : 시계 방향 / 음수 : 반시계 방향

skew 함수
= 요소를 지정한 각도만큼 비틀어 왜곡 (2차원 변형만 가능)
	= transform: skew(ax, ay);
		- ay 값이 주어지지 않으면, 0으로 간주함
	= transform: skewX(ax);
	= transform: skewY(ay);



13-2 변형과 관련된 속성들

transform-origin 속성
= 특정 지점을 변형의 기준으로 설정
= transform-origin: <x축> <y축> <z축> | initial | inherit ;
	- <길이>, <백분율>, left, right, center, top, bottom 등

perspective 속성
= 3차원 변형에서 원근감을 갖게 함
- 속성 값은 0보다 커야 하며, 값이 클수록 사용자로부터 멀어짐
= perspective: <크기> | none;

perspective-origin 속성
= 입체적으로 표현할 요소의 아랫부분(bottom) 위치 지정
- 좀 더 높은 곳에서 원근을 조절하는 듯한 느낌을 갖게 함
- perspective 속성이 함께 지정되어 있어야 함
= perspective-origin: <x축 값> | <y축 값> ;
	- <길이>, <백분율>, left, right, center, top, bottom 등 (기본 값 = 50%)

transform-style 속성
= 부모 요소에 적용한 3D 변형을 하위 요소에도 적용
= transform-style : flat | preserve-3d ;
	- flat : 하위 요소를 평면으로 처리
	- preserve-3d : 하위 요소들에 3D 효과를 적용

backface-visibility 속성
= 요소의 뒷면(반대쪽 면)을 표시할 것인지 결정
= backface-visibility: visible | hidden ;
	- visible : [기본 값] 뒷면을 표시
	- hidden : 뒷면을 표시하지 않음

두 개 이상의 변형을 동시 사용
- transform 속성에 변형 함수를 나열함
	ex ) transform: scale(2), perspective(120px), rotateX(180deg);



13-3 트랜지션

트랜지션
= 웹 요소의 스타일 속성이 조금씩 자연스럽게 바뀌는 것

transition-property 속성
= 트랜지션 대상을 설정
= transition-property: all(기본 값) | none | <속성 이름> ;
	- 미지정 시 모든 속성이 트랜지션 대상이 됨

transition-duration 속성
= 트랜지션의 진행 시간을 지정
= transition-duration: <시간> ;
	- 시간 단위 : 초[s] 또는 밀리초[ms]
- 트랜지션이 여러 개라면, 쉼표(,)로 구분해 진행 시간을 지정

transition-timing-function 속성
= 트랜지션의 시작과 중간, 끝에서의 속도를 지정
	- linear : 일정한 속도
	- ease : [기본 값] 처음에는 천천히 시작하고 점점 빨라지다가 마지막에는 천천히 끝냄
	- ease-in : 시작을 느리게 함
	- ease-out : 느리게 끝냄
	- ease-in-out : 느리게 시작하고 느리게 끝냄
	- cubic-bezier(n, n, n, n) : 베지에 함수를 직접 정의해 사용 (n의 값은 0~1)

transition-delay 속성
= 트랜지션이 언제부터 시작될지 지연 시간을 설정
	- 지정하는 시간만큼 기다렸다가 트랜지션이 시작
= transition-delay: <시간> ;
	- 시간 단위 : 초[s] 또는 밀리초[ms]

transition 속성
= 트랜지션 속성들을 한꺼번에 표기
= transition: <transition-property 값> | <transition-duration 값> |
	<transition-timing-function 값> | <transition-delay 값> ;



13-4 애니메이션

애니메이션
= 시작해 끝내는 동안 원하는 곳 어디서든 스타일을 바꾸며 정의할 수 있음
= 키프레임(keyframe) : 애니메이션 중간에 스타일이 바뀌는 지점
- IE 10 이상과 최신 모던 브라우저에서 지원하며, 이전 모던 브라우저는 접두사를 붙여야 함

@keyframes 속성
= 애니메이션의 시작과 끝을 비롯해 상태가 바뀌는 지점을 설정 (애니메이션 정의)
= @keyframes <이름> {
	<선택자> { <스타일> }
    }
	- 이름 : 애니메이션을 구별
	- 시작 위치는 0%, 끝 위치는 100%로 놓고 위치 지정
	- 시작과 끝 위치만 사용한다면 from, to 키워드 사용 가능

animation-name 속성
= @keyframes 속성에서 만든 애니메이션 이름을 사용

animation-duration 속성
= 애니메이션 실행 시간 설정
- 기본 단위 : 초[s] 또는 밀리초[ms]
	- 기본 값은 0이기 때문에 미 설정 시 애니메이션은 동작하지 않음

animation-direction 속성
= 애니메이션이 끝난 후, 원래 위치로 돌아가거나 반대 방향으로 애니메이션을 실행하도록 지정
= animation-direction: normal(기본 값) | alternate
	- normal : [기본 값] 애니메이션을 끝까지 실행하면 원래 있던 위치로 돌아감
	- alternative : 애니메이션을 끝까지 실행하면 왔던 방향으로 되돌아가면서 애니메이션 실행

animation-iteration-count 속성
= 애니메이션 반복 횟수 지정
= animation-iteration-count : <숫자> | infinite

animation-timing-function 속성
= 애니메이션 속도 곡선 지정
= animation-timing-function: linear | ease(기본 값) | ease | ease-in | ease-out | ease-in-out |cubic-bezier(n, n, n, n)

animation 속성
= 여러 개의 애니메이션 속성을 하나의 속성으로 줄여서 사용
- 지정하지 않은 속성은 기본 값으로 사용
- animation-duration 속성 값은 반드시 지정해야 함
	- 기본 값은 0이기 때문에 미 설정 시 애니메이션은 동작하지 않음
- 속성 순서는 중요하지 않지만 시간 값이 두 개라면 첫 번째 시간은 <animation-duration>으로,
	두 번째 시간은 <animation-delay> 속성으로 간주함